* using log directory ‘/Users/stokdar/Desktop/Research/git/qrjoint.Rcheck’
* using R version 3.4.3 (2017-11-30)
* using platform: x86_64-apple-darwin15.6.0 (64-bit)
* using session charset: UTF-8
* using option ‘--as-cran’
* checking for file ‘qrjoint/DESCRIPTION’ ... OK
* this is package ‘qrjoint’ version ‘2.0’
* checking CRAN incoming feasibility ... NOTE
Maintainer: ‘Surya Tokdar <surya.tokdar@duke.edu>’

New maintainer:
  Surya Tokdar <surya.tokdar@duke.edu>
Old maintainer(s):
  Surya Tokdar <tokdar@stat.duke.edu>
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘qrjoint’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking use of S3 registration ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... WARNING
predict:
  function(object, ...)
predict.qrjoint:
  function(object, newdata, summarize, burn.perc, nmc)

predict:
  function(object, ...)
predict.qde:
  function(object, burn.perc, nmc, yRange, yLength)

See section ‘Generic functions and methods’ in the ‘Writing R
Extensions’ manual.
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
qde: no visible binding for global variable ‘p’
Undefined global functions or variables:
  p
* checking Rd files ... OK
* checking Rd metadata ... WARNING
Rd files with duplicated name 'summary.qde':
  ‘predict.qde.Rd’ ‘summary.qde.Rd’
* checking Rd line widths ... NOTE
Rd file 'predict.qrjoint.Rd':
  \examples lines wider than 100 characters:
     matplot(fit.qrj$tau.g[fit.qrj$reg.ix], t(quants), type="l", xlab="p", ylab="Quantile Function", col="lightgray", lty=1)

Rd file 'summary.qde.Rd':
  \usage lines wider than 90 characters:
     summary(object, ntrace = 1000, burn.perc = 0.5, plot.dev = TRUE, more.details = FALSE, ...)

These lines will be truncated in the PDF manual.
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... WARNING
Codoc mismatches from documentation object 'qrjoint':
qrjoint
  Code: function(formula, data, nsamp = 1000, thin = 10, cens = NULL,
                 wt = NULL, incr = 0.01, par = "prior", nknots = 6,
                 hyper = list(sig = c(0.1, 0.1), lam = c(6, 4), kap =
                 c(0.1, 0.1, 1)), shrink = FALSE, prox.range = c(0.2,
                 0.95), acpt.target = 0.15, ref.size = 3, blocking =
                 "std5", temp = 1, expo = 2, blocks.mu, blocks.S,
                 fix.nu = FALSE, fbase = c("t", "unif"), verbose =
                 TRUE)
  Docs: function(formula, data, nsamp = 1000, thin = 10, cens = rep(0,
                 length(y)), wt = rep(1, length(y)), incr = 0.01, par =
                 "prior", nknots = 6, hyper = list(sig = c(0.1, 0.1),
                 lam = c(6, 4), kap = c(0.1, 0.1, 1)), shrink = FALSE,
                 prox.range = c(0.2, 0.95), acpt.target = 0.15,
                 ref.size = 3, blocking = "std5", temp = 1, expo = 2,
                 blocks.mu, blocks.S, fix.nu = FALSE, fbase = c("t",
                 "unif"), verbose = TRUE)
  Mismatches in argument default values:
    Name: 'cens' Code: NULL Docs: rep(0, length(y))
    Name: 'wt' Code: NULL Docs: rep(1, length(y))

Codoc mismatches from documentation object 'summary.qrjoint':
summary.qrjoint
  Code: function(object, ntrace = 1000, burn.perc = 0.5, plot.dev =
                 TRUE, more.details = FALSE, ...)
  Docs: function(object, ntrace = 1000, plot.dev = TRUE, more.details =
                 FALSE, ...)
  Argument names in code not in docs:
    burn.perc
  Mismatches in argument names:
    Position: 3 Code: burn.perc Docs: plot.dev
    Position: 4 Code: plot.dev Docs: more.details
    Position: 5 Code: more.details Docs: ...

* checking Rd \usage sections ... WARNING
Undocumented arguments in documentation object 'predict.qrjoint'
  ‘summarize’

Assignments in \usage in documentation object 'qde':
  qde <- function(y, nsamp = 1000, thin = 10, cens = rep(0, length(y)), 
      wt = rep(1, length(y)), incr = 0.01, par = "prior", nknots = 6, 
      hyper = list(sig = c(0.1, 0.1), lam = c(6, 4), kap = c(0.1, 
          0.1, 1)), prox.range = c(0.2, 0.95), acpt.target = 0.15, 
      ref.size = 3, blocking = "single", temp = 1, expo = 2, blocks.mu, 
      blocks.S, fix.nu = FALSE, fbase = c("t", "unif"), verbose = TRUE) `\\method{update}{qde}`(object, 
      nadd, append = TRUE, ...)

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking compiled code ... OK
* checking examples ... ERROR
Running examples in ‘qrjoint-Ex.R’ failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: qde
> ### Title: Quantiles based Density Estimation
> ### Aliases: qde update.qde
> ### Keywords: programming
> 
> ### ** Examples
> 
> ## Plasma data analysis
> 
> data(plasma)
> Y <- plasma$BetaPlasma
> 
> # model fitting with 40 posterior samples from 80 iterations (thin = 2)
> # this is of course for illustration, for practical model fitting you
> # ought to try at least something like nsamp = 500, thin = 20
> fit.qde <- qde(Y, nsamp = 40, thin = 2)
Initial lp = -2431.32
iter = 8, lp = -2214.81 acpt = 0.25 
iter = 16, lp = -2101.17 acpt = 0.25 
iter = 24, lp = -2079.59 acpt = 0.13 
iter = 32, lp = -2055.83 acpt = 0.28 
iter = 40, lp = -2034.53 acpt = 0.13 
iter = 48, lp = -2034.53 acpt = 0.00 
iter = 56, lp = -2034.53 acpt = 0.00 
iter = 64, lp = -2034.53 acpt = 0.00 
iter = 72, lp = -2034.53 acpt = 0.00 
iter = 80, lp = -2034.53 acpt = 0.00 
elapsed time: 0 seconds
> summary(fit.qde, more = TRUE)
WAIC.1 = 4039.54 , WAIC.2 = 4039.54 
Warning in min(x) : no non-missing arguments to min; returning Inf
Warning in max(x) : no non-missing arguments to max; returning -Inf
Error in plot.window(...) : need finite 'xlim' values
Calls: summary ... summary.qde -> plot -> plot.default -> localWindow -> plot.window
Execution halted
* checking PDF version of manual ... OK
* DONE
Status: 1 ERROR, 4 WARNINGs, 3 NOTEs
